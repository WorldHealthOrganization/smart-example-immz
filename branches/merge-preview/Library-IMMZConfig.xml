<?xml version="1.0" encoding="UTF-8"?>

<Library xmlns="http://hl7.org/fhir">
  <id value="IMMZConfig"/>
  <meta>
    <profile value="http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library"/>
    <profile value="http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module"/>
  </meta>
  <text>
    <status value="generated"/><div xmlns="http://www.w3.org/1999/xhtml"><h2>Parameters</h2><table class="grid"><tr><td>High incidence of TB and/or high leprosy burden</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Polio-endemic country with high risk of spread</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Polio dose scheme</td><td>out</td><td>0</td><td>1</td><td>string</td></tr><tr><td>Country has a high risk of exposure to polio</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>High Coverage of Polio and Risk of Wild Importation</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>In a country where the peak burden of severe Hib disease occurs in young infants</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>In a setting where the greatest disease morbidity and mortality occur later, or whererate reductions of disease are not fully sustained after the routine use of Hib vaccine</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Hib dose scheme</td><td>out</td><td>0</td><td>1</td><td>string</td></tr><tr><td>Hepatitis A endemic country</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Japanese Encephalitis dose scheme</td><td>out</td><td>0</td><td>1</td><td>string</td></tr><tr><td>Country recognizes JE as a health priority</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Pneumococcal dose scheme</td><td>out</td><td>0</td><td>1</td><td>string</td></tr><tr><td>Country is not highly endemic for Hepatitis A</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Country is administering a Live attenuated HAV vaccine</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>In a setting with a high disease burden and mortality</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Region recommends Meningococcal vaccination</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Region recommends Cholera vaccination</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Region recommends Typhoid vaccination</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Country is administering the TCV vaccine</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Country is administering ViPS vaccine</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Country is administering an Inactivated HAV vaccine</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>In a setting where the risk of measles among infants &lt; 9 months of age remains high</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Country currently has a measles outbreak</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Population is in conflict zones internally displaced populations and refugees</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>In a setting where there is high transmission of Measles</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>In a setting where there is low transmission of Measles</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Country has Yellow Fever Endemic</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Country recognizes TBE as a priority</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>There is a compelling reason to vaccinate infants with Meningococcal between 3 to 9 months old</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Country recognizes Varicella an important public health burden</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Country recognizes MUMPS reduction as a public health priority</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Country is using a 3 dose series ROTA product</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr></table><h2>Contents</h2><p><code>text/cql</code></p><pre><code class="language-sql">library IMMZConfig

using FHIR version '4.0.1'

define &quot;High incidence of TB and/or high leprosy burden&quot;: true
define &quot;Polio-endemic country with high risk of spread&quot;: true
/*
define &quot;Combined bOPV and IPV Schedule&quot;: true
define &quot;Sequential IPV-OPV Schedule&quot;: true
*/
/*
 * Possible Polio dose schemes are 'combined', 'sequential', or 'ipv'
 */
define &quot;Polio dose scheme&quot;: 'combined'
define &quot;Country has a high risk of exposure to polio&quot;: true
define &quot;High Coverage of Polio and Risk of Wild Importation&quot;: true

define &quot;In a country where the peak burden of severe Hib disease occurs in young infants&quot;:true
define &quot;In a setting where the greatest disease morbidity and mortality occur later, or whererate reductions of disease are not fully sustained after the routine use of Hib vaccine&quot;: true
define &quot;Hib dose scheme&quot;: '1p'
define &quot;Hepatitis A endemic country&quot;: true

define &quot;Japanese Encephalitis dose scheme&quot;: 'attenuated'
/*
define &quot;Country is administering Live recombinant JE antigen&quot;:true
define &quot;Country is administering Live attentuated JE antigen&quot;: true
define &quot;Country is administering Inactivated Vero cell-derived JE antigen&quot;: true
*/
define &quot;Country recognizes JE as a health priority&quot;: true

/*
define &quot;Country is following a 2 dose scheme for Pneumococcal&quot;: true
define &quot;Country is following a 3 dose scheme for Pneumococcal&quot;: true
*/
define &quot;Pneumococcal dose scheme&quot;: '2p+1'
define &quot;Country is not highly endemic for Hepatitis A&quot;:true
define &quot;Country is administering a Live attenuated HAV vaccine&quot;: true
define &quot;In a setting with a high disease burden and mortality&quot;: true

define &quot;Region recommends Meningococcal vaccination&quot;: true
define &quot;Region recommends Cholera vaccination&quot;: true
define &quot;Region recommends Typhoid vaccination&quot;: true
define &quot;Country is administering the TCV vaccine&quot;: true
define &quot;Country is administering ViPS vaccine&quot;: true
define &quot;Country is administering an Inactivated HAV vaccine&quot;: true
define &quot;In a setting where the risk of measles among infants &lt; 9 months of age remains high&quot;: false
define &quot;Country currently has a measles outbreak&quot;: false
define &quot;Population is in conflict zones internally displaced populations and refugees&quot;: false
define &quot;In a setting where there is high transmission of Measles&quot;:false
define &quot;In a setting where there is low transmission of Measles&quot;:false

define &quot;Country has Yellow Fever Endemic&quot;: true
define &quot;Country recognizes TBE as a priority&quot;: true

define &quot;There is a compelling reason to vaccinate infants with Meningococcal between 3 to 9 months old&quot;: true
define &quot;Country recognizes Varicella an important public health burden&quot;: true
define &quot;Country recognizes MUMPS reduction as a public health priority&quot;: true
define &quot;Country is using a 3 dose series ROTA product&quot;: true
// TODO: 
//define &quot;bOPV and IPV Schedule&quot;:
//	'combined'
	//'sequential';


</code></pre><p><code>Content not shown - (</code><code>application/elm+xml</code>, size = 17Kb )</p><p><code>Content not shown - (</code><code>application/elm+json</code>, size = 28Kb )</p></div>
  </text>
  <extension url="http://hl7.org/fhir/StructureDefinition/cqf-knowledgeCapability">
    <valueCode value="computable"/>
  </extension>
  <url value="http://smart.who.int/immunizations-measles/Library/IMMZConfig"/>
  <version value="0.1.0"/>
  <name value="IMMZConfig"/>
  <title value="IMMZConfig"/>
  <status value="draft"/>
  <experimental value="true"/>
  <type>
    <coding>
      <system value="http://terminology.hl7.org/CodeSystem/library-type"/>
      <code value="logic-library"/>
    </coding>
  </type>
  <date value="2024-06-07T12:26:37+00:00"/>
  <publisher value="WHO"/>
  <contact>
    <name value="WHO"/>
    <telecom>
      <system value="url"/>
      <value value="http://who.int"/>
    </telecom>
  </contact>
  <description value="This library defines configuration points for the Immunization CPG"/>
  <parameter>
    <name value="High incidence of TB and/or high leprosy burden"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Polio-endemic country with high risk of spread"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Polio dose scheme"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="Country has a high risk of exposure to polio"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="High Coverage of Polio and Risk of Wild Importation"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="In a country where the peak burden of severe Hib disease occurs in young infants"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="In a setting where the greatest disease morbidity and mortality occur later, or whererate reductions of disease are not fully sustained after the routine use of Hib vaccine"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Hib dose scheme"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="Hepatitis A endemic country"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Japanese Encephalitis dose scheme"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="Country recognizes JE as a health priority"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Pneumococcal dose scheme"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="Country is not highly endemic for Hepatitis A"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Country is administering a Live attenuated HAV vaccine"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="In a setting with a high disease burden and mortality"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Region recommends Meningococcal vaccination"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Region recommends Cholera vaccination"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Region recommends Typhoid vaccination"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Country is administering the TCV vaccine"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Country is administering ViPS vaccine"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Country is administering an Inactivated HAV vaccine"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="In a setting where the risk of measles among infants &lt; 9 months of age remains high"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Country currently has a measles outbreak"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Population is in conflict zones internally displaced populations and refugees"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="In a setting where there is high transmission of Measles"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="In a setting where there is low transmission of Measles"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Country has Yellow Fever Endemic"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Country recognizes TBE as a priority"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="There is a compelling reason to vaccinate infants with Meningococcal between 3 to 9 months old"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Country recognizes Varicella an important public health burden"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Country recognizes MUMPS reduction as a public health priority"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Country is using a 3 dose series ROTA product"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <content>
    <contentType value="text/cql"/>
    <data value="bGlicmFyeSBJTU1aQ29uZmlnDQoNCnVzaW5nIEZISVIgdmVyc2lvbiAnNC4wLjEnDQoNCmRlZmluZSAiSGlnaCBpbmNpZGVuY2Ugb2YgVEIgYW5kL29yIGhpZ2ggbGVwcm9zeSBidXJkZW4iOiB0cnVlDQpkZWZpbmUgIlBvbGlvLWVuZGVtaWMgY291bnRyeSB3aXRoIGhpZ2ggcmlzayBvZiBzcHJlYWQiOiB0cnVlDQovKg0KZGVmaW5lICJDb21iaW5lZCBiT1BWIGFuZCBJUFYgU2NoZWR1bGUiOiB0cnVlDQpkZWZpbmUgIlNlcXVlbnRpYWwgSVBWLU9QViBTY2hlZHVsZSI6IHRydWUNCiovDQovKg0KICogUG9zc2libGUgUG9saW8gZG9zZSBzY2hlbWVzIGFyZSAnY29tYmluZWQnLCAnc2VxdWVudGlhbCcsIG9yICdpcHYnDQogKi8NCmRlZmluZSAiUG9saW8gZG9zZSBzY2hlbWUiOiAnY29tYmluZWQnDQpkZWZpbmUgIkNvdW50cnkgaGFzIGEgaGlnaCByaXNrIG9mIGV4cG9zdXJlIHRvIHBvbGlvIjogdHJ1ZQ0KZGVmaW5lICJIaWdoIENvdmVyYWdlIG9mIFBvbGlvIGFuZCBSaXNrIG9mIFdpbGQgSW1wb3J0YXRpb24iOiB0cnVlDQoNCmRlZmluZSAiSW4gYSBjb3VudHJ5IHdoZXJlIHRoZSBwZWFrIGJ1cmRlbiBvZiBzZXZlcmUgSGliIGRpc2Vhc2Ugb2NjdXJzIGluIHlvdW5nIGluZmFudHMiOnRydWUNCmRlZmluZSAiSW4gYSBzZXR0aW5nIHdoZXJlIHRoZSBncmVhdGVzdCBkaXNlYXNlIG1vcmJpZGl0eSBhbmQgbW9ydGFsaXR5IG9jY3VyIGxhdGVyLCBvciB3aGVyZXJhdGUgcmVkdWN0aW9ucyBvZiBkaXNlYXNlIGFyZSBub3QgZnVsbHkgc3VzdGFpbmVkIGFmdGVyIHRoZSByb3V0aW5lIHVzZSBvZiBIaWIgdmFjY2luZSI6IHRydWUNCmRlZmluZSAiSGliIGRvc2Ugc2NoZW1lIjogJzFwJw0KZGVmaW5lICJIZXBhdGl0aXMgQSBlbmRlbWljIGNvdW50cnkiOiB0cnVlDQoNCmRlZmluZSAiSmFwYW5lc2UgRW5jZXBoYWxpdGlzIGRvc2Ugc2NoZW1lIjogJ2F0dGVudWF0ZWQnDQovKg0KZGVmaW5lICJDb3VudHJ5IGlzIGFkbWluaXN0ZXJpbmcgTGl2ZSByZWNvbWJpbmFudCBKRSBhbnRpZ2VuIjp0cnVlDQpkZWZpbmUgIkNvdW50cnkgaXMgYWRtaW5pc3RlcmluZyBMaXZlIGF0dGVudHVhdGVkIEpFIGFudGlnZW4iOiB0cnVlDQpkZWZpbmUgIkNvdW50cnkgaXMgYWRtaW5pc3RlcmluZyBJbmFjdGl2YXRlZCBWZXJvIGNlbGwtZGVyaXZlZCBKRSBhbnRpZ2VuIjogdHJ1ZQ0KKi8NCmRlZmluZSAiQ291bnRyeSByZWNvZ25pemVzIEpFIGFzIGEgaGVhbHRoIHByaW9yaXR5IjogdHJ1ZQ0KDQovKg0KZGVmaW5lICJDb3VudHJ5IGlzIGZvbGxvd2luZyBhIDIgZG9zZSBzY2hlbWUgZm9yIFBuZXVtb2NvY2NhbCI6IHRydWUNCmRlZmluZSAiQ291bnRyeSBpcyBmb2xsb3dpbmcgYSAzIGRvc2Ugc2NoZW1lIGZvciBQbmV1bW9jb2NjYWwiOiB0cnVlDQoqLw0KZGVmaW5lICJQbmV1bW9jb2NjYWwgZG9zZSBzY2hlbWUiOiAnMnArMScNCmRlZmluZSAiQ291bnRyeSBpcyBub3QgaGlnaGx5IGVuZGVtaWMgZm9yIEhlcGF0aXRpcyBBIjp0cnVlDQpkZWZpbmUgIkNvdW50cnkgaXMgYWRtaW5pc3RlcmluZyBhIExpdmUgYXR0ZW51YXRlZCBIQVYgdmFjY2luZSI6IHRydWUNCmRlZmluZSAiSW4gYSBzZXR0aW5nIHdpdGggYSBoaWdoIGRpc2Vhc2UgYnVyZGVuIGFuZCBtb3J0YWxpdHkiOiB0cnVlDQoNCmRlZmluZSAiUmVnaW9uIHJlY29tbWVuZHMgTWVuaW5nb2NvY2NhbCB2YWNjaW5hdGlvbiI6IHRydWUNCmRlZmluZSAiUmVnaW9uIHJlY29tbWVuZHMgQ2hvbGVyYSB2YWNjaW5hdGlvbiI6IHRydWUNCmRlZmluZSAiUmVnaW9uIHJlY29tbWVuZHMgVHlwaG9pZCB2YWNjaW5hdGlvbiI6IHRydWUNCmRlZmluZSAiQ291bnRyeSBpcyBhZG1pbmlzdGVyaW5nIHRoZSBUQ1YgdmFjY2luZSI6IHRydWUNCmRlZmluZSAiQ291bnRyeSBpcyBhZG1pbmlzdGVyaW5nIFZpUFMgdmFjY2luZSI6IHRydWUNCmRlZmluZSAiQ291bnRyeSBpcyBhZG1pbmlzdGVyaW5nIGFuIEluYWN0aXZhdGVkIEhBViB2YWNjaW5lIjogdHJ1ZQ0KZGVmaW5lICJJbiBhIHNldHRpbmcgd2hlcmUgdGhlIHJpc2sgb2YgbWVhc2xlcyBhbW9uZyBpbmZhbnRzIDwgOSBtb250aHMgb2YgYWdlIHJlbWFpbnMgaGlnaCI6IGZhbHNlDQpkZWZpbmUgIkNvdW50cnkgY3VycmVudGx5IGhhcyBhIG1lYXNsZXMgb3V0YnJlYWsiOiBmYWxzZQ0KZGVmaW5lICJQb3B1bGF0aW9uIGlzIGluIGNvbmZsaWN0IHpvbmVzIGludGVybmFsbHkgZGlzcGxhY2VkIHBvcHVsYXRpb25zIGFuZCByZWZ1Z2VlcyI6IGZhbHNlDQpkZWZpbmUgIkluIGEgc2V0dGluZyB3aGVyZSB0aGVyZSBpcyBoaWdoIHRyYW5zbWlzc2lvbiBvZiBNZWFzbGVzIjpmYWxzZQ0KZGVmaW5lICJJbiBhIHNldHRpbmcgd2hlcmUgdGhlcmUgaXMgbG93IHRyYW5zbWlzc2lvbiBvZiBNZWFzbGVzIjpmYWxzZQ0KDQpkZWZpbmUgIkNvdW50cnkgaGFzIFllbGxvdyBGZXZlciBFbmRlbWljIjogdHJ1ZQ0KZGVmaW5lICJDb3VudHJ5IHJlY29nbml6ZXMgVEJFIGFzIGEgcHJpb3JpdHkiOiB0cnVlDQoNCmRlZmluZSAiVGhlcmUgaXMgYSBjb21wZWxsaW5nIHJlYXNvbiB0byB2YWNjaW5hdGUgaW5mYW50cyB3aXRoIE1lbmluZ29jb2NjYWwgYmV0d2VlbiAzIHRvIDkgbW9udGhzIG9sZCI6IHRydWUNCmRlZmluZSAiQ291bnRyeSByZWNvZ25pemVzIFZhcmljZWxsYSBhbiBpbXBvcnRhbnQgcHVibGljIGhlYWx0aCBidXJkZW4iOiB0cnVlDQpkZWZpbmUgIkNvdW50cnkgcmVjb2duaXplcyBNVU1QUyByZWR1Y3Rpb24gYXMgYSBwdWJsaWMgaGVhbHRoIHByaW9yaXR5IjogdHJ1ZQ0KZGVmaW5lICJDb3VudHJ5IGlzIHVzaW5nIGEgMyBkb3NlIHNlcmllcyBST1RBIHByb2R1Y3QiOiB0cnVlDQovLyBUT0RPOiANCi8vZGVmaW5lICJiT1BWIGFuZCBJUFYgU2NoZWR1bGUiOg0KLy8JJ2NvbWJpbmVkJw0KCS8vJ3NlcXVlbnRpYWwnOw0KDQoNCg=="/>
  </content>
  <content>
    <contentType value="application/elm+xml"/>
    <data value=""/>
  </content>
  <content>
    <contentType value="application/elm+json"/>
    <data value=""/>
  </content>
</Library>